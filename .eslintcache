[{"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\index.js":"1","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\App.js":"2","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Homepage.js":"3","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\context\\AppContext.js":"4","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Landingpage.js":"5","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\PrivateRoute.js":"6","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Login.js":"7","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Register.js":"8","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\API.js":"9","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Header.js":"10","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Dropdown.js":"11","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Detailpage.js":"12","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\addPostpage.js":"13","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Hirepage.js":"14","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Transactionpage.js":"15","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Profilepage.js":"16","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionItem.js":"17","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\DetailModal.js":"18","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\addProject.js":"19","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\EditProfilepage.js":"20","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\DetailProject.js":"21","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionList.js":"22","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionModal.js":"23","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\ButtonDropdown.js":"24","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\priceFormatter.js":"25"},{"size":341,"mtime":1609488141375,"results":"26","hashOfConfig":"27"},{"size":3487,"mtime":1609495458031,"results":"28","hashOfConfig":"27"},{"size":3442,"mtime":1609909983770,"results":"29","hashOfConfig":"27"},{"size":1054,"mtime":1609488924067,"results":"30","hashOfConfig":"27"},{"size":2509,"mtime":1608607627508,"results":"31","hashOfConfig":"27"},{"size":458,"mtime":1609496745938,"results":"32","hashOfConfig":"27"},{"size":2752,"mtime":1609496276577,"results":"33","hashOfConfig":"27"},{"size":3296,"mtime":1609496064214,"results":"34","hashOfConfig":"27"},{"size":515,"mtime":1609910216790,"results":"35","hashOfConfig":"27"},{"size":2120,"mtime":1609496158812,"results":"36","hashOfConfig":"27"},{"size":1728,"mtime":1609496175805,"results":"37","hashOfConfig":"27"},{"size":6512,"mtime":1609911303885,"results":"38","hashOfConfig":"27"},{"size":6454,"mtime":1609685636374,"results":"39","hashOfConfig":"27"},{"size":3969,"mtime":1609495899979,"results":"40","hashOfConfig":"27"},{"size":1955,"mtime":1609496329623,"results":"41","hashOfConfig":"27"},{"size":6677,"mtime":1609496277100,"results":"42","hashOfConfig":"27"},{"size":4800,"mtime":1609484320200,"results":"43","hashOfConfig":"27"},{"size":1560,"mtime":1608620788004,"results":"44","hashOfConfig":"27"},{"size":4806,"mtime":1609495789322,"results":"45","hashOfConfig":"27"},{"size":5081,"mtime":1609809033888,"results":"46","hashOfConfig":"27"},{"size":3493,"mtime":1609495829350,"results":"47","hashOfConfig":"27"},{"size":1923,"mtime":1609496273945,"results":"48","hashOfConfig":"27"},{"size":2043,"mtime":1609496203497,"results":"49","hashOfConfig":"27"},{"size":544,"mtime":1608876574129,"results":"50","hashOfConfig":"27"},{"size":203,"mtime":1609485111641,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"gwi2ej",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\index.js",[],["113","114"],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\App.js",["115","116"],"import { useContext, useEffect, useState } from \"react\";\nimport { QueryCache, ReactQueryCacheProvider } from \"react-query\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { AppContext } from \"./context/AppContext\";\nimport AddPostpage from \"./pages/addPostpage\";\nimport addProject from \"./pages/addProject\";\nimport Detailpage from \"./pages/Detailpage\";\nimport DetailProject from \"./pages/DetailProject\";\nimport EditProfilepage from \"./pages/EditProfilepage\";\nimport Hirepage from \"./pages/Hirepage\";\nimport Homepage from \"./pages/Homepage\";\nimport Landingpage from \"./pages/Landingpage\";\nimport Profilepage from \"./pages/Profilepage\";\nimport Transactionpage from \"./pages/Transactionpage\";\nimport { API, options, setAuthToken } from \"./utils/API\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\n\nconst queryCache = new QueryCache();\n\nfunction App() {\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n\n  const [state, dispatch] = useContext(AppContext);\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  const loadUser = async () => {\n    try {\n      const response = await API.get(\"check-auth\", options);\n\n      if (response.status === 401) {\n        return dispatch({\n          type: \"AUTH_ERROR\",\n        });\n      }\n\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: \"AUTH_ERROR\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  return (\n    <>\n      <ReactQueryCacheProvider queryCache={queryCache}>\n        {modalLogin && (\n          <Login\n            showModalRegister={showModalRegister}\n            showModalLogin={showModalLogin}\n          />\n        )}\n        {modalRegister && (\n          <Register\n            showModalLogin={showModalLogin}\n            showModalRegister={showModalRegister}\n          />\n        )}\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Landingpage\n                showModalLogin={showModalLogin}\n                showModalRegister={showModalRegister}\n              />\n            </Route>\n            <PrivateRoute path=\"/home\" exact component={Homepage} />\n            <PrivateRoute path=\"/detail/:id\" exact component={Detailpage} />\n            <PrivateRoute path=\"/add-post\" exact component={AddPostpage} />\n            <PrivateRoute path=\"/hire\" exact component={Hirepage} />\n            <PrivateRoute path=\"/profile\" exact component={Profilepage} />\n            <PrivateRoute path=\"/user/:id\" exact component={Profilepage} />\n            <PrivateRoute path=\"/add-project\" exact component={addProject} />\n            <PrivateRoute path=\"/project/:id\" exact component={DetailProject} />\n            <PrivateRoute\n              path=\"/edit-profile\"\n              exact\n              component={EditProfilepage}\n            />\n            <PrivateRoute\n              path=\"/transaction\"\n              component={Transactionpage}\n              exact\n            />\n          </Switch>\n        </Router>\n      </ReactQueryCacheProvider>\n    </>\n  );\n}\n\nexport default App;\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Homepage.js",["117"],"import { faSearch, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Header from \"../components/Header\";\r\nimport StackGrid from \"react-stack-grid\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport { API, options } from \"../utils/API\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Homepage() {\r\n  const { data, error, isError, isLoading, refetch } = useQuery(\"posts\", () =>\r\n    API.get(`/posts`, { params: { query: query, type: type } }, options)\r\n  );\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [type]);\r\n\r\n  return (\r\n    <div className=\"w-full h-screen relative\">\r\n      <Header />\r\n      {isLoading ? (\r\n        <div className=\"w-full h-screen flex justify-center items-center\">\r\n          <FontAwesomeIcon icon={faSpinner} spin size=\"6x\" />\r\n        </div>\r\n      ) : isError ? (\r\n        <div>\r\n          <h1>{error.response.data.message}</h1>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"w-8/12 h-auto m-auto\">\r\n            <div className=\"w-full h-16 flex justify-between items-center\">\r\n              <select\r\n                className=\"w-24 h-10 border-2 border-base rounded-md\"\r\n                onChange={(e) => {\r\n                  setType(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"today\">today</option>\r\n                <option value=\"follow\">follow</option>\r\n              </select>\r\n              <label className=\"h-10 w-64 flex justify-start items-center rounded-md border-2 border-base\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"search\"\r\n                  name=\"search\"\r\n                  onChange={(e) => {\r\n                    setQuery(e.target.value);\r\n                  }}\r\n                  value={query}\r\n                  className=\"w-full h-full m-2 outline-none\"\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    refetch();\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faSearch} className=\"mx-4\" />\r\n                </button>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"m-auto\" style={{ width: \"912px\" }}>\r\n            <h3 className=\"text-2xl font-bold my-4 ml-4\">today post</h3>\r\n\r\n            <StackGrid columnWidth={300}>\r\n              {data.data.data.posts\r\n                ? data.data.data.posts.map((post, index) => {\r\n                    return (\r\n                      <div\r\n                        key={index + 1}\r\n                        className=\"w-full flex justify-center shadow-2xl\"\r\n                      >\r\n                        <img\r\n                          src={post.photos[0]?.image}\r\n                          alt={post.title}\r\n                          className=\"object-cover object-center\"\r\n                          onClick={() => {\r\n                            history.push(`/detail/${post.id}`);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </StackGrid>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\context\\AppContext.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Landingpage.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\PrivateRoute.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Login.js",["118"],"import React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"react-query\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { API, setAuthToken } from \"../utils/API\";\r\n\r\nfunction Login({ showModalRegister, showModalLogin }) {\r\n  const [mutate, { isError, error }] = useMutation((form) =>\r\n    API.post(`/login`, form)\r\n  );\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await mutate(form, {\r\n        onSuccess: (data) => {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: data.data.data,\r\n          });\r\n          setAuthToken(data.data.data.token);\r\n          showModalLogin();\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen bg-transparent absolute\">\r\n      <div\r\n        className=\"w-64 bg-white absolute z-50 border-2 rounded-md flex flex-col justify-between p-6\"\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"400px\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n        }}\r\n      >\r\n        <h1 className=\"fontFamily-freight font-bold text-3xl text-base\">\r\n          Login\r\n        </h1>\r\n        {isError && (\r\n          <span className=\"w-full h-10 text-xs text-center mb-2 leading-10 text-white bg-base rounded-md\">\r\n            {error.response.data.message}\r\n          </span>\r\n        )}\r\n        <form className=\"flex flex-col mt-4\" onSubmit={handleSubmit}>\r\n          <label className=\"text-base mb-2\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border-2 border-base mb-4 p-2 rounded-md\"\r\n          />\r\n          <label className=\"text-base mb-2\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border-2 border-base mb-4 p-2 rounded-md\"\r\n          />\r\n          <button className=\"w-24 h-8 bg-base border-2 mt-4 border-base rounded-md text-white self-center\">\r\n            Login\r\n          </button>\r\n        </form>\r\n        <span className=\"text-sm mt-2 self-center\">\r\n          Don't have Account ? Click{\" \"}\r\n          <button onClick={showModalRegister}>Here</button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Register.js",["119"],"import React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"react-query\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { API, setAuthToken } from \"../utils/API\";\r\n\r\nfunction Register({ showModalLogin, showModalRegister }) {\r\n  const [mutate, { isError, error }] = useMutation((form) =>\r\n    API.post(`/register`, form)\r\n  );\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    fullName: \"\",\r\n  });\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await mutate(form, {\r\n        onSuccess: (data) => {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: data.data.data,\r\n          });\r\n          setAuthToken(data.data.data.token);\r\n          showModalRegister();\r\n        },\r\n        onError: (error) => {\r\n          console.error(error.response.data.message);\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen bg-transparent absolute\">\r\n      <div\r\n        className=\"bg-white absolute z-50 border-2 rounded-md flex flex-col justify-between p-6\"\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"500px\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n        }}\r\n      >\r\n        <h1 className=\"fontFamily-freight font-bold text-3xl text-base\">\r\n          Register\r\n        </h1>\r\n        {/* {state.error && <div>{error}</div>} */}\r\n        <form className=\"flex flex-col mt-4\" onSubmit={handleSubmit}>\r\n          {isError && (\r\n            <span className=\"w-full h-10 text-xs text-center mb-2 leading-10 text-white bg-base rounded-md\">\r\n              {error.response.data.message}\r\n            </span>\r\n          )}\r\n          <label className=\"text-base mb-2\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={form.email}\r\n            className=\"w-full h-10 border-2 border-base mb-4 p-2 rounded-md\"\r\n          />\r\n          <label className=\"text-base mb-2\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={form.password}\r\n            className=\"w-full h-10 border-2 border-base mb-4 p-2 rounded-md\"\r\n          />\r\n          <label className=\"text-base mb-2\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            onChange={handleChange}\r\n            value={form.fullName}\r\n            className=\"w-full h-10 border-2 border-base mb-4 p-2 rounded-md\"\r\n          />\r\n          <button\r\n            className=\"w-24 h-8 bg-base border-2 mt-4 border-base rounded-md text-white self-center\"\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n        <span className=\"text-sm mt-2 self-center\">\r\n          Already have an account ? Click{\" \"}\r\n          <button onClick={showModalLogin}>Here</button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\API.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Header.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\Dropdown.js",["120","121"],"import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport transIcon from \"../assets/image/transIcon.png\";\r\nimport userIcon from \"../assets/image/userIcon.png\";\r\nimport logoutIcon from \"../assets/image/logoutIcon.png\";\r\nimport ButtonDropdown from \"./ButtonDropdown\";\r\n\r\nfunction Dropdown({ handleDropdown }) {\r\n  const [dropdowns, setDropdowns] = useState([\r\n    {\r\n      title: \"Profile\",\r\n      src: userIcon,\r\n      page: \"/profile\",\r\n    },\r\n    {\r\n      title: \"Order\",\r\n      src: transIcon,\r\n      page: \"/transaction\",\r\n    },\r\n  ]);\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const handleLogout = () => {\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n    handleDropdown();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white w-48 h-auto absolute z-50 flex flex-col justify-center rounded-lg\"\r\n      style={{\r\n        boxShadow: \"0px 0px 10px #9E9E9E\",\r\n        top: \"100px\",\r\n        right: \"20px\",\r\n      }}\r\n    >\r\n      <div>\r\n        {dropdowns.map((dropdown) => (\r\n          <ButtonDropdown\r\n            src={dropdown.src}\r\n            page={dropdown.page}\r\n            title={dropdown.title}\r\n          />\r\n        ))}\r\n        <span className=\"w-full border-2 flex border-base\"></span>\r\n        <button\r\n          className=\"w-40 h-12 flex items-center m-auto mt-2\"\r\n          onClick={() => {\r\n            handleLogout();\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img src={logoutIcon} alt=\"logout\" className=\"w-5 mr-2\" />\r\n          <h3 className=\"text-base text-lg font-bold\">Logout</h3>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Detailpage.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\addPostpage.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Hirepage.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Transactionpage.js",["122","123"],"import { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Header from \"../components/Header\";\r\nimport TransactionList from \"../components/TransactionList\";\r\nimport { API, baseUrl, options } from \"../utils/API\";\r\n\r\nfunction Transactionpage() {\r\n  const {\r\n    data,\r\n    isError,\r\n    error,\r\n    isLoading,\r\n    refetch,\r\n    isFetching,\r\n  } = useQuery(\"transactions\", () =>\r\n    API.get(`/transactions`, { params: { status: status } }, options)\r\n  );\r\n\r\n  const [status, setStatus] = useState(\"my-offer\");\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [status]);\r\n\r\n  return (\r\n    <div className=\"w-full h-screen\">\r\n      <Header />\r\n      {isLoading ? (\r\n        <div className=\"w-full h-screen flex justify-center items-center\">\r\n          <FontAwesomeIcon icon={faSpinner} spin size=\"6x\" />\r\n        </div>\r\n      ) : isError ? (\r\n        <div>\r\n          <h1>{error.response.data.message}</h1>\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-10/12 m-auto h-full\">\r\n          <select\r\n            className=\"w-24 mb-6 h-10 border-2 rounded-md border-base\"\r\n            onChange={(e) => {\r\n              setStatus(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"my-offer\">My Offer</option>\r\n            <option value=\"my-order\">My Order</option>\r\n          </select>\r\n          {isFetching ? (\r\n            <div className=\"w-full h-screen flex justify-center items-center\">\r\n              <FontAwesomeIcon icon={faSpinner} spin size=\"6x\" />\r\n            </div>\r\n          ) : (\r\n            <TransactionList\r\n              transactions={data.data.data.transactions}\r\n              status={status}\r\n              refetch={refetch}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactionpage;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\Profilepage.js",["124","125"],"import Header from \"../components/Header\";\r\nimport profile from \"../assets/image/profile.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport { API, options } from \"../utils/API\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport StackGrid from \"react-stack-grid\";\r\n\r\nfunction Profilepage({ location }) {\r\n  const { data, isError, error, isLoading } = useQuery(\r\n    `${location.pathname === \"/profile\" ? \"profile\" : \"user\"}`,\r\n    () => API.get(`/user/${location.state.id}`, options)\r\n  );\r\n\r\n  const [followed] = useMutation((data) =>\r\n    API.post(`/followed`, data, options)\r\n  );\r\n  const [unfollowed] = useMutation((data) =>\r\n    API.delete(`/unfollowed`, data, options)\r\n  );\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      let form = { followerId: data.data.data.id };\r\n      if (data.data.data.followed.length > 0) {\r\n        await unfollowed(form);\r\n      } else {\r\n        await followed(form);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"w-full h-screen relative\">\r\n      <Header />\r\n      {isLoading ? (\r\n        <div className=\"w-full h-screen flex justify-center items-center\">\r\n          <FontAwesomeIcon icon={faSpinner} spin size=\"6x\" />\r\n        </div>\r\n      ) : isError ? (\r\n        <div>\r\n          <h1>{error.response.data.message}</h1>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div\r\n            className=\"w-8/12 m-auto mt-10 flex justify-between\"\r\n            style={{\r\n              height: \"60vh\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"w-32 h-48 bg-base absolute\"\r\n              style={{\r\n                top: \"100px\",\r\n                right: \"100px\",\r\n              }}\r\n            ></div>\r\n            <div className=\"w-5/12 h-full\">\r\n              {data.data.data.avatar ? (\r\n                <img\r\n                  src={data.data.data.avatar}\r\n                  alt={data.data.data.fullName}\r\n                  className=\"w-32 h-32 rounded-full object-cover object-center\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={profile}\r\n                  alt={data.data.data.fullName}\r\n                  className=\"w-32 h-32 rounded-full object-cover object-center\"\r\n                />\r\n              )}\r\n              <h5 className=\"my-4 text-lg font-bold\">\r\n                {data.data.data.fullName}\r\n              </h5>\r\n              <h1 className=\"text-4xl font-bold mb-4\">\r\n                {data.data.data.greating\r\n                  ? data.data.data.greating\r\n                  : \"Welcome to my Profile\"}\r\n              </h1>\r\n              <div className=\"flex\">\r\n                {location.pathname === \"/profile\" ? (\r\n                  <button\r\n                    className=\"bg-base rounded-md w-32 h-8 text-white outline-none\"\r\n                    onClick={() => history.push(\"/edit-profile\")}\r\n                  >\r\n                    Edit Profile\r\n                  </button>\r\n                ) : (\r\n                  <>\r\n                    {data.data.data.followed.length > 0 ? (\r\n                      <button\r\n                        className=\"w-20 h-8 mr-2 bg-base rounded-md text-white\"\r\n                        onClick={() => {\r\n                          handleFollow();\r\n                        }}\r\n                      >\r\n                        Followed\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"w-20 h-8 mr-2 border-2 border-base rounded-md\"\r\n                        onClick={() => {\r\n                          handleFollow();\r\n                        }}\r\n                      >\r\n                        Follow\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      className=\"w-20 h-8 bg-base text-white rounded-md\"\r\n                      onClick={() => {\r\n                        history.push({\r\n                          pathname: \"/hire\",\r\n                          state: { orderTo: `${location.state.id}` },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Hired\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"w-6/12 h-full relative\">\r\n              <div\r\n                className=\"\"\r\n                style={{\r\n                  width: \"500px\",\r\n                  height: \"300px\",\r\n                }}\r\n              >\r\n                {data.data.data.posts[0] ? (\r\n                  <img\r\n                    src={data.data.data.posts[0].photos[0].image}\r\n                    alt={data.data.data.posts[0].title}\r\n                    className=\"w-full h-full object-cover object-center\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: `/detail/${data.data.data.posts[0].id}`,\r\n                      });\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div\r\n                    className=\"w-full h-full bg-base flex justify-center items-center\"\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: \"/add-post\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    <h1 className=\"text-lg font-bold text-white\">\r\n                      Ayok buat karyamu sekarang juga\r\n                    </h1>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-8/12 m-auto my-4\">\r\n            <h3 className=\"font-bold text-xl\">My Work</h3>\r\n            <div className=\"h-full\" style={{ width: \"912px\" }}>\r\n              <StackGrid columnWidth={300}>\r\n                {data.data.data.arts.map((art, index) => {\r\n                  return (\r\n                    <div key={index + 1} className=\"w-full flex justify-center\">\r\n                      <img\r\n                        src={art.image}\r\n                        alt=\"title\"\r\n                        className=\"object-cover object-center\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </StackGrid>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profilepage;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionItem.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\DetailModal.js",[],["126","127"],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\addProject.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\EditProfilepage.js",["128"],"import { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useMutation } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport { API, options } from \"../utils/API\";\r\n\r\nfunction EditProfilepage() {\r\n  const [mutate] = useMutation((formData) => {\r\n    return API.patch(`/user`, { data: formData }, options);\r\n  });\r\n\r\n  const [artMutate] = useMutation((form) => {\r\n    return API.post(`/upload-arts`, { data: form }, options);\r\n  });\r\n\r\n  const [form, setForm] = useState({\r\n    greating: \"\",\r\n    fullName: \"\",\r\n  });\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAvatar = (e) => {\r\n    let imageReader = new FileReader();\r\n\r\n    setAvatar(e.target.files[0]);\r\n\r\n    imageReader.onloadend = () => {\r\n      setPreview([imageReader.result]);\r\n    };\r\n\r\n    imageReader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"greating\", form.greating);\r\n      formData.append(\"fullName\", form.fullName);\r\n      formData.append(\"avatar\", avatar);\r\n\r\n      for (const form of formData) {\r\n        console.log(`${form[0]} ${form[1]}`);\r\n      }\r\n      await mutate(formData, {\r\n        onSuccess: (data) => {\r\n          console.log(data);\r\n          history.push(\"/profile\");\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptFiles) => {\r\n    try {\r\n      const art = new FormData();\r\n      art.append(\"image\", acceptFiles[0]);\r\n\r\n      await artMutate(art, {\r\n        onSuccess: () => {},\r\n        onError: (error) => {\r\n          console.error({ error });\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, []);\r\n\r\n  const { getInputProps, getRootProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div className=\"w-full h-screen relative\">\r\n      <Header />\r\n      <div className=\"w-8/12 m-auto flex justify-between\">\r\n        <div className=\"w-8/12\">\r\n          <div\r\n            className=\"w-full flex justify-center items-center\r\n            border-2 border-base outline-none rounded-md\"\r\n            style={{\r\n              height: \"400px\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input\r\n              {...getInputProps()}\r\n              className=\"hidden\"\r\n              type=\"file\"\r\n              multiple\r\n            />\r\n            <h1 className=\"font-bold text-xl\">\r\n              <span className=\"text-base\">Upload</span> Best Your Art\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-3/12\">\r\n          <form className=\"flex flex-col items-center\" onSubmit={handleSubmit}>\r\n            {preview ? (\r\n              <div className=\"w-32 h-32 flex justify-center items-center mb-10 p-2 border-dashed border-4 border-base rounded-full\">\r\n                <img\r\n                  src={preview}\r\n                  alt=\"preview\"\r\n                  className=\"w-full h-full object-cover object-center rounded-full\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <label\r\n                className=\"w-32 h-32 flex justify-center items-center mb-10 p-2 border-dashed border-4 border-base rounded-full\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faCamera}\r\n                  className=\"text-6xl text-base\"\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  onChange={(e) => {\r\n                    handleAvatar(e);\r\n                  }}\r\n                />\r\n              </label>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full h-10 rounded-md px-2 border-2 border-base mb-6\"\r\n              placeholder=\"Greeting\"\r\n              name=\"greating\"\r\n              value={form.greating}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full h-10 rounded-md px-2 border-2 border-base mb-6\"\r\n              placeholder=\"Full Name\"\r\n              name=\"fullName\"\r\n              value={form.fullName}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-20 h-8 bg-base text-white rounded-md\"\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfilepage;\r\n","D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\pages\\DetailProject.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionList.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\TransactionModal.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\components\\ButtonDropdown.js",[],"D:\\laragon\\www\\fullStack-App\\finalTask\\client\\src\\utils\\priceFormatter.js",[],["129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":26,"column":10,"nodeType":"137","messageId":"138","endLine":26,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":55,"column":6,"nodeType":"141","endLine":55,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":23,"column":6,"nodeType":"141","endLine":23,"endColumn":12,"suggestions":"144"},{"ruleId":"135","severity":1,"message":"136","line":16,"column":10,"nodeType":"137","messageId":"138","endLine":16,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":16,"column":10,"nodeType":"137","messageId":"138","endLine":16,"endColumn":15},{"ruleId":"135","severity":1,"message":"145","line":9,"column":21,"nodeType":"137","messageId":"138","endLine":9,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":21,"column":10,"nodeType":"137","messageId":"138","endLine":21,"endColumn":15},{"ruleId":"135","severity":1,"message":"146","line":7,"column":15,"nodeType":"137","messageId":"138","endLine":7,"endColumn":22},{"ruleId":"139","severity":1,"message":"143","line":25,"column":6,"nodeType":"141","endLine":25,"endColumn":14,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":13},{"ruleId":"135","severity":1,"message":"146","line":6,"column":15,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"131","replacedBy":"149"},{"ruleId":"133","replacedBy":"150"},{"ruleId":"139","severity":1,"message":"151","line":81,"column":6,"nodeType":"141","endLine":81,"endColumn":8,"suggestions":"152"},{"ruleId":"131","replacedBy":"153"},{"ruleId":"133","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["158"],"'setDropdowns' is assigned a value but never used.","'baseUrl' is defined but never used.",["159"],"'Axios' is defined but never used.",["155"],["156"],"React Hook useCallback has a missing dependency: 'artMutate'. Either include it or remove the dependency array.",["160"],["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [loadUser]",{"range":"169","text":"170"},"Update the dependencies array to be: [refetch, type]",{"range":"171","text":"172"},"Update the dependencies array to be: [refetch, status]",{"range":"173","text":"174"},"Update the dependencies array to be: [artMutate]",{"range":"175","text":"176"},[1654,1656],"[loadUser]",[761,767],"[refetch, type]",[727,735],"[refetch, status]",[2192,2194],"[artMutate]"]